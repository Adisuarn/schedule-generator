[{"D:\\wtf\\schedule-generator\\src\\pages\\api\\screenshot.ts":"1","D:\\wtf\\schedule-generator\\src\\pages\\api\\test.ts":"2","D:\\wtf\\schedule-generator\\src\\pages\\index.tsx":"3","D:\\wtf\\schedule-generator\\src\\pages\\renderer\\[room].tsx":"4","D:\\wtf\\schedule-generator\\src\\pages\\_app.tsx":"5","D:\\wtf\\schedule-generator\\src\\pages\\_document.tsx":"6","D:\\wtf\\schedule-generator\\src\\components\\Background\\colorful.tsx":"7","D:\\wtf\\schedule-generator\\src\\components\\Background\\Decorations\\index.tsx":"8","D:\\wtf\\schedule-generator\\src\\components\\Background\\flower.tsx":"9","D:\\wtf\\schedule-generator\\src\\components\\Background\\halloween.tsx":"10","D:\\wtf\\schedule-generator\\src\\components\\Background\\index.tsx":"11","D:\\wtf\\schedule-generator\\src\\components\\Background\\Mistletoe.tsx":"12","D:\\wtf\\schedule-generator\\src\\components\\Background\\Ordaments.tsx":"13","D:\\wtf\\schedule-generator\\src\\components\\Background\\sticker.tsx":"14","D:\\wtf\\schedule-generator\\src\\components\\Background\\sweetintherain.tsx":"15","D:\\wtf\\schedule-generator\\src\\components\\ColorPicker.tsx":"16","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\DownloadButton.tsx":"17","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\Preview.tsx":"18","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\ScreenSize.tsx":"19","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\ThemeButton.tsx":"20","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Page.tsx":"21","D:\\wtf\\schedule-generator\\src\\components\\index.tsx":"22","D:\\wtf\\schedule-generator\\src\\components\\Input.tsx":"23","D:\\wtf\\schedule-generator\\src\\components\\LearnSchedule\\Page.tsx":"24","D:\\wtf\\schedule-generator\\src\\components\\Loader\\Ellipsis.tsx":"25","D:\\wtf\\schedule-generator\\src\\components\\Logo\\index.tsx":"26","D:\\wtf\\schedule-generator\\src\\components\\Logo\\LongLogo.tsx":"27","D:\\wtf\\schedule-generator\\src\\components\\Meta\\DescribeRoute.tsx":"28","D:\\wtf\\schedule-generator\\src\\components\\Modal.tsx":"29","D:\\wtf\\schedule-generator\\src\\components\\Preview.tsx":"30","D:\\wtf\\schedule-generator\\src\\components\\Toast\\Context.tsx":"31","D:\\wtf\\schedule-generator\\src\\components\\_Preview.tsx":"32"},{"size":631,"mtime":1699884716843,"results":"33","hashOfConfig":"34"},{"size":1306,"mtime":1700207288272,"results":"35","hashOfConfig":"34"},{"size":6578,"mtime":1699884716844,"results":"36","hashOfConfig":"34"},{"size":13626,"mtime":1700023736281,"results":"37","hashOfConfig":"34"},{"size":483,"mtime":1699886735784,"results":"38","hashOfConfig":"34"},{"size":1541,"mtime":1699884716842,"results":"39","hashOfConfig":"34"},{"size":903,"mtime":1700212262455,"results":"40","hashOfConfig":"34"},{"size":156728,"mtime":1699884716807,"results":"41","hashOfConfig":"34"},{"size":593,"mtime":1700210847680,"results":"42","hashOfConfig":"34"},{"size":866,"mtime":1699973345982,"results":"43","hashOfConfig":"34"},{"size":497,"mtime":1699958113410,"results":"44","hashOfConfig":"34"},{"size":895,"mtime":1699886735767,"results":"45","hashOfConfig":"34"},{"size":1270,"mtime":1699886735767,"results":"46","hashOfConfig":"34"},{"size":560,"mtime":1699886735768,"results":"47","hashOfConfig":"34"},{"size":897,"mtime":1699959811958,"results":"48","hashOfConfig":"34"},{"size":1960,"mtime":1699884716811,"results":"49","hashOfConfig":"34"},{"size":1572,"mtime":1700212035885,"results":"50","hashOfConfig":"34"},{"size":296,"mtime":1699884716812,"results":"51","hashOfConfig":"34"},{"size":731,"mtime":1699884716814,"results":"52","hashOfConfig":"34"},{"size":663,"mtime":1699884716815,"results":"53","hashOfConfig":"34"},{"size":7597,"mtime":1700214145706,"results":"54","hashOfConfig":"34"},{"size":185,"mtime":1699884716833,"results":"55","hashOfConfig":"34"},{"size":1035,"mtime":1699884716816,"results":"56","hashOfConfig":"34"},{"size":24959,"mtime":1700213760187,"results":"57","hashOfConfig":"34"},{"size":7950,"mtime":1699884716819,"results":"58","hashOfConfig":"34"},{"size":3273,"mtime":1699886735782,"results":"59","hashOfConfig":"34"},{"size":43118,"mtime":1699884716822,"results":"60","hashOfConfig":"34"},{"size":1231,"mtime":1699884716824,"results":"61","hashOfConfig":"34"},{"size":2577,"mtime":1699886735782,"results":"62","hashOfConfig":"34"},{"size":151572,"mtime":1699884716829,"results":"63","hashOfConfig":"34"},{"size":2431,"mtime":1699884716831,"results":"64","hashOfConfig":"34"},{"size":144067,"mtime":1700210716941,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"elivf3",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\wtf\\schedule-generator\\src\\pages\\api\\screenshot.ts",[],"D:\\wtf\\schedule-generator\\src\\pages\\api\\test.ts",[],"D:\\wtf\\schedule-generator\\src\\pages\\index.tsx",[],"D:\\wtf\\schedule-generator\\src\\pages\\renderer\\[room].tsx",["141"],"import { Logo } from \"@components\"\r\nimport type { GetStaticPaths, GetStaticProps } from \"next\"\r\nimport Head from \"next/head\"\r\nimport fs from \"fs\"\r\nimport path from \"path\"\r\nimport { hexToRgbA, rawRgbColorToCss } from \"@utils/hexToRgb\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useRouter } from \"next/router\"\r\nimport { isDarkOrLightHEX, isDarkOrLightRGBAString, isDarkOrLightRGBAStringD } from \"@utils/isDarkOrLight\"\r\nimport Image from \"next/image\"\r\nimport classNames from \"classnames\"\r\nimport { Mistletoe, Ordaments, Sticker, Flower, Colorful, Halloween, SweetInTheRain } from \"@components/Background\"\r\nimport { selOpt } from \"@handlers/server/optHandler\"\r\n\r\nconst defaultColors = {\r\n  bg: rawRgbColorToCss(hexToRgbA(\"#FFFFFF\")),\r\n  t1: rawRgbColorToCss(hexToRgbA(\"#D17474\")),\r\n  t2: rawRgbColorToCss(hexToRgbA(\"#E28B8B\")),\r\n  c1: rawRgbColorToCss(hexToRgbA(\"#EBB8B8\")),\r\n  c2: rawRgbColorToCss(hexToRgbA(\"#E49E9E\")),\r\n  c3: rawRgbColorToCss(hexToRgbA(\"#E08484\")),\r\n  c4: rawRgbColorToCss(hexToRgbA(\"#D17474\")),\r\n  c5: rawRgbColorToCss(hexToRgbA(\"#BA5757\")),\r\n}\r\n\r\ninterface ScheduleMeta {\r\n  branch: string\r\n  teacher: string[]\r\n  room: string\r\n  opt: number\r\n}\r\n\r\ninterface ScheduleBody {\r\n  [key: string]: string[]\r\n}\r\n\r\ninterface ScheduleData {\r\n  meta: ScheduleMeta\r\n  body: ScheduleBody\r\n  room: string\r\n}\r\n\r\nexport const getStaticPaths: GetStaticPaths = async () => {\r\n  const files = fs.readdirSync(path.join(process.cwd(), \"_keep/data/2-2566\"))\r\n\r\n  const paths = files\r\n    .filter((i) => i.includes(\".json\"))\r\n    .map((s) => ({\r\n      params: { room: s.replace(\".json\", \"\") },\r\n    }))\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  }\r\n}\r\n\r\nexport const getStaticProps: GetStaticProps = async ({ params }) => {\r\n  const room = params?.room\r\n  let scheduleData: ScheduleData | null = null\r\n  if (params) {\r\n    const raw = fs.readFileSync(path.join(process.cwd(), `_keep/data/2-2566/${room}.json`)).toString()\r\n    scheduleData = JSON.parse(raw)\r\n    scheduleData = selOpt(scheduleData)\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      scheduleData: { ...scheduleData, room: room },\r\n    },\r\n  }\r\n}\r\n\r\ninterface RoomProps {\r\n  scheduleData: ScheduleData\r\n  query: any\r\n}\r\n\r\ntype BGType = \"none\" | \"mistletoe\" | \"ordaments\" | \"sticker\" | \"flower\" | \"colorful\" | \"halloween\" | \"sweetintherain\"\r\n\r\nconst Room = ({ scheduleData }: RoomProps) => {\r\n  const router = useRouter()\r\n\r\n  useEffect(() => {\r\n    if (!router.query.colorScheme) {\r\n      return\r\n    }\r\n\r\n    if (router.query?.bg) setBackground(router.query.bg as BGType)\r\n\r\n    const colorScheme: string = router.query.colorScheme?.toString()\r\n    const parsed = JSON.parse(colorScheme)\r\n\r\n    const cssColor: { [k: string]: string } = {}\r\n\r\n    Object.keys(parsed).forEach((k) => {\r\n      // @ts-ignore\r\n      cssColor[k] = rawRgbColorToCss(parsed[k])\r\n    })\r\n\r\n    // @ts-ignore\r\n    setColor(cssColor)\r\n  }, [router.query.colorScheme])\r\n\r\n  const [color, setColor] = useState(defaultColors)\r\n  const [background, setBackground] = useState<BGType>(\"none\")\r\n\r\n  const genSchedule = (period: number) => {\r\n    return (\r\n      <>\r\n        {Array(4)\r\n          .fill(\"\")\r\n          .map((_, i) => {\r\n            const name = period in scheduleData?.body[i + 1] ? scheduleData?.body[i + 1][period][0] : \"\" ?? \"\"\r\n            const teacher = period in scheduleData?.body[i + 1] ? scheduleData?.body[i + 1][period][1] : \"\" ?? \"\"\r\n\r\n            if (name || teacher)\r\n              return (\r\n                <div style={{ backgroundColor: \"#fff\" }} className=\"button\" key={i}>\r\n                  {/* <div className=\"line\" style={{ backgroundColor: Days[i].color }}></div> */}\r\n                  <div className=\"text\">\r\n                    <strong\r\n                      className=\"subject\"\r\n                      style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#000\" : \"#000\" }}\r\n                    >\r\n                      {name}\r\n                    </strong>\r\n                    <p\r\n                      className=\"teacher\"\r\n                      style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#a6a8ab\" : \"#000\" }}\r\n                    >\r\n                      {teacher?.replace(/\\+/g, \" \")}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              )\r\n            else return <div className=\"blank\"></div>\r\n          })}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const Days = [\r\n    {\r\n      name: \"จันทร์\",\r\n      color: color.c1,\r\n      order: 1,\r\n    },\r\n    {\r\n      name: \"อังคาร\",\r\n      color: color.c2,\r\n      order: 2,\r\n    },\r\n    {\r\n      name: \"พุธ\",\r\n      color: color.c3,\r\n      order: 3,\r\n    },\r\n    {\r\n      name: \"พฤหัสฯ\",\r\n      color: color.c4,\r\n      order: 4,\r\n    },\r\n    {\r\n      name: \"ศุกร์\",\r\n      color: color.c5,\r\n      order: 5,\r\n    },\r\n  ]\r\n\r\n  const getClassNumber = (day: number) => {\r\n    let classNumber = 0\r\n    for (let i in scheduleData.body[day]) {\r\n      if (scheduleData.body[day][i] != \"\") {\r\n        classNumber++\r\n      }\r\n    }\r\n    return classNumber\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"absolute top-0 left-0 w-[2388px] h-[1668px] opacity-20 z-20\">\r\n        <Image src=\"/ref.png\" width={2388} height={1668} />\r\n      </div> */}\r\n      <div style={{ backgroundColor: color.bg }} className=\"h-[1886px] w-[2700px]\">\r\n        <div style={{ backgroundColor: color.bg }} className=\"wrapper\">\r\n          {background === \"mistletoe\" && <Mistletoe />}\r\n          {background === \"ordaments\" && <Ordaments color={color.c1} />}\r\n          {background === \"sticker\" && <Sticker />}\r\n          {background === \"flower\" && <Flower />}\r\n          {background === \"colorful\" && <Colorful />}\r\n          {background === \"halloween\" && <Halloween />}\r\n          {background === \"sweetintherain\" && <SweetInTheRain />}\r\n          <div className=\"header\">\r\n            <div className=\"left\">\r\n              {/*<div className=\"bar\"></div>*/}\r\n              <div className=\"title-container\">\r\n                <h1 className=\"title\" style={{ color: color.t1 }}>\r\n                  ตารางเรียน\r\n                </h1>\r\n                <p className=\"subtitle\" style={{ color: color.t2 }}>\r\n                  ภาคเรียนที่ 2/2566\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"right\">\r\n              <h2 className=\"room\" style={{ color: color.t2 }}>\r\n                ห้อง {scheduleData.room} | {scheduleData.meta.branch}\r\n              </h2>\r\n              <div className=\"teacher\" style={{ color: color.t2 }}>\r\n                {scheduleData.meta.teacher.map((teacher) => (\r\n                  <p className=\"text\" key={teacher}>\r\n                    {teacher}\r\n                  </p>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"main\">\r\n            <div className=\"days\">\r\n              {Days.map((day) => (\r\n                <div className={classNames(\"day\", day.name === \"ศุกร์\" && \"friday\")} key={day.name}>\r\n                  <div\r\n                    className=\"button\"\r\n                    style={{\r\n                      backgroundColor: day.color,\r\n                      color: isDarkOrLightRGBAStringD(day.color) === \"light\" ? \"#444\" : \"#fff\",\r\n                    }}\r\n                  >\r\n                    {day.name}\r\n                  </div>\r\n                  <div\r\n                    className=\"line\"\r\n                    style={{ backgroundColor: day.color, width: 300 + 230 * getClassNumber(day.order) }}\r\n                  ></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"schedules\">\r\n              <div className=\"mon-to-thurs\">\r\n                {/* 1 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    07.50-08.30\r\n                  </div>\r\n                  {genSchedule(1)}\r\n                </div>\r\n                {/* 2 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    08.30-09.10\r\n                  </div>\r\n                  {genSchedule(2)}\r\n                </div>\r\n                {/* break10 */}\r\n                <div className=\"col\">\r\n                  <div style={{ backgroundColor: \"#fff\" }} className=\"break10-button\">\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>พัก</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>10</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>นาที</p>\r\n                  </div>\r\n                </div>\r\n                {/* 3 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    09.20-10.00\r\n                  </div>\r\n                  {genSchedule(3)}\r\n                </div>\r\n                {/* 4 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    10.00-10.40\r\n                  </div>\r\n                  {genSchedule(4)}\r\n                </div>\r\n                {/* 5 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    10.40-11.20\r\n                  </div>\r\n                  {genSchedule(5)}\r\n                </div>\r\n                {/* lunchbreak */}\r\n                <div className=\"col\">\r\n                  <div style={{ backgroundColor: \"#fff\" }} className=\"lunch-button\">\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>พัก</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>กลาง</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>วัน</p>\r\n                  </div>\r\n                </div>\r\n                {/* 6 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    12.20-13.00\r\n                  </div>\r\n                  {genSchedule(6)}\r\n                </div>\r\n                {/* 7 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    13.00-13.40\r\n                  </div>\r\n                  {genSchedule(7)}\r\n                </div>\r\n                {/* break10 */}\r\n                <div className=\"col\">\r\n                  <div style={{ backgroundColor: \"#fff\" }} className=\"break10-button\">\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>พัก</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>10</p>\r\n                    <p className=\"text\" style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#000\"}}>นาที</p>\r\n                  </div>\r\n                </div>\r\n                {/* 8 */}\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    13.50-14.30\r\n                  </div>\r\n                  {genSchedule(8)}\r\n                </div>\r\n                <div className=\"col\">\r\n                  <div\r\n                    className=\"time\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#404040\" : \"#eee\" }}\r\n                  >\r\n                    14.30-15.10\r\n                  </div>\r\n                  {genSchedule(9)}\r\n                </div>\r\n              </div>\r\n              <div className=\"fri\">\r\n                <div className=\"button\" style={{ backgroundColor: \"#fff\" }}>\r\n                  <div\r\n                    className=\"text\"\r\n                    style={{ color: isDarkOrLightRGBAString(color.bg) === \"light\" ? \"#000\" : \"#000\" }}\r\n                  >\r\n                    วิชารักษาดินแดน\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Logo color={color.t1} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Room\r\n","D:\\wtf\\schedule-generator\\src\\pages\\_app.tsx",[],"D:\\wtf\\schedule-generator\\src\\pages\\_document.tsx",["142","143"],"import NextDocument, { DocumentContext, Head, Html, Main, NextScript } from \"next/document\"\r\n\r\nexport default class Document extends NextDocument {\r\n  static async getInitialProps(ctx: DocumentContext) {\r\n    const initialProps = await NextDocument.getInitialProps(ctx)\r\n    return { ...initialProps }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Html lang=\"th\">\r\n        <Head>\r\n          <meta charSet=\"utf-8\" />\r\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\r\n          <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\r\n          <link\r\n            href=\"https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+Thai:wght@100;200;300;400;500;600;700&display=swap\"\r\n            rel=\"stylesheet\"\r\n          />\r\n          <link href=\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\" rel=\"stylesheet\" />\r\n          <link rel=\"icon\" href=\"/favicon.ico\" />\r\n          <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-CFN0JZ8EVW\"></script>\r\n          <script\r\n            dangerouslySetInnerHTML={{\r\n              __html: `\r\n            window.dataLayer = window.dataLayer || [];\r\n            function gtag(){dataLayer.push(arguments);}\r\n            gtag('js', new Date());\r\n            gtag('config', 'G-CFN0JZ8EVW', {\r\n              page_path: window.location.pathname,\r\n            });\r\n          `,\r\n            }}\r\n          />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </Html>\r\n    )\r\n  }\r\n}\r\n","D:\\wtf\\schedule-generator\\src\\components\\Background\\colorful.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Background\\Decorations\\index.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Background\\flower.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Background\\halloween.tsx",["144","145"],"import { FC } from \"react\"\r\nimport Image from \"next/image\"\r\n\r\nexport const HalloweenPreview: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-0 left-0 z-[2] h-full w-full\">\r\n    <div className=\"absolute top-[0px] left-[2.5px] -z-[2] h-[277px] w-[406px]\">\r\n      {/* <Image src=\"/assets/christmas-bg-preview.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/halloween-bg.png\" width={2388} height={1668} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Halloween: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-[50px] left-0 z-[2] h-[1668px] w-[2388px]\">\r\n    <div className=\"absolute top-[0px] left-0 -z-[2] h-[1886px] w-[2700px] \">\r\n      {/* <Image src=\"/assets/christmas-bg.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/halloween-bg.png\" width={2700} height={1886} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Halloween\r\n","D:\\wtf\\schedule-generator\\src\\components\\Background\\index.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Background\\Mistletoe.tsx",["146","147"],"import { FC } from \"react\"\r\nimport Image from \"next/image\"\r\n\r\nexport const MistletoePreview: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-0 left-0 z-[2] h-full w-full\">\r\n    <div className=\"absolute top-[13.5px] left-[2.5px] z-[2] h-[277px] w-[406px]\">\r\n      {/* <Image src=\"/assets/christmas-bg-preview.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/christmas-bg-rordor-preview.png\" width={2600} height={1768} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Mistletoe: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-[50px] left-0 z-[2] h-[1668px] w-[2388px]\">\r\n    <div className=\"absolute top-[100px] left-0 z-[2] h-[1768px] w-[2600px] \">\r\n      {/* <Image src=\"/assets/christmas-bg.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/christmas-bg-rordor.png\" width={2700} height={1886} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Mistletoe\r\n","D:\\wtf\\schedule-generator\\src\\components\\Background\\Ordaments.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Background\\sticker.tsx",["148","149"],"import { FC } from \"react\"\r\nimport Image from \"next/image\"\r\n\r\nexport const StickerPreview: FC = () => {\r\n    return (\r\n        <div className=\"absolute top-0 left-0 z-[2] h-full w-full\">\r\n            <Image src=\"/assets/sticker-bg.png\" width={2700} height={1886}></Image>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Sticker: FC = () => {\r\n    return (\r\n        <div className=\"absolute top-0 right-0 z-[2] h-[1886px] w-[2700px] \">\r\n            <Image src=\"/assets/sticker-bg.png\" width={2700} height={1886}></Image>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sticker\r\n","D:\\wtf\\schedule-generator\\src\\components\\Background\\sweetintherain.tsx",["150","151"],"import { FC } from \"react\"\r\nimport Image from \"next/image\"\r\n\r\nexport const SweetInTheRainPreview: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-0 left-0 z-[2] h-full w-full\">\r\n    <div className=\"absolute top-[0px] left-[2.5px] -z-[2] h-[277px] w-[406px]\">\r\n      {/* <Image src=\"/assets/christmas-bg-preview.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/sweet-in-the-rain-bg.png\" width={2388} height={1668} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SweetInTheRain: FC = () => {\r\n  return (\r\n    // <div className=\"absolute top-[50px] left-0 z-[2] h-[1668px] w-[2388px]\">\r\n    <div className=\"absolute top-[0px] left-0 -z-[2] h-[1886px] w-[2700px] \">\r\n      {/* <Image src=\"/assets/christmas-bg.png\" width={2388} height={1668} /> */}\r\n      <Image src=\"/assets/sweet-in-the-rain-bg.png\" width={2700} height={1886} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SweetInTheRain\r\n","D:\\wtf\\schedule-generator\\src\\components\\ColorPicker.tsx",["152"],"import React, { useEffect, useState } from \"react\"\r\nimport reactCSS from \"reactcss\"\r\nimport { SketchPicker } from \"react-color\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport interface ColorType {\r\n  r: string\r\n  g: string\r\n  b: string\r\n  a: string\r\n}\r\n\r\ninterface ColorPickerProps {\r\n  defaultColor?: ColorType\r\n  onChange?: (color: ColorType) => void\r\n}\r\n\r\nexport const ColorPicker = ({\r\n  defaultColor = { r: \"0\", g: \"0\", b: \"0\", a: \"1\" },\r\n  onChange = (color) => {},\r\n}: ColorPickerProps) => {\r\n  const [displayColorPicker, setDCP] = useState(false)\r\n  const [color, setColor] = useState(defaultColor)\r\n\r\n  const handleClick = () => {\r\n    setDCP((prev) => !prev)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setDCP(false)\r\n  }\r\n\r\n  const handleChange = (color: { rgb: ColorType }) => {\r\n    setColor(color.rgb)\r\n    onChange(color.rgb)\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleChange({ rgb: defaultColor })\r\n  }, [defaultColor])\r\n\r\n  return (\r\n    <div>\r\n      <motion.div whileHover={{ scale: 1.1 }} onClick={handleClick}>\r\n        <div\r\n          className=\"h-[30px] w-[30px] cursor-pointer rounded-[10px] sm:h-[32px] sm:w-[42px]\"\r\n          style={{\r\n            background: `rgba(${color.r}, ${color.g}, ${color.b}, ${color.a})`,\r\n            border: \"1px solid rgba(0, 0, 0, 0.2)\",\r\n          }}\r\n        />\r\n      </motion.div>\r\n      {displayColorPicker ? (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            zIndex: 99,\r\n            touchAction: \"none\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: \"0px\",\r\n              right: \"0px\",\r\n              bottom: \"0px\",\r\n              left: \"0px\",\r\n              touchAction: \"none\",\r\n            }}\r\n            onClick={handleClose}\r\n          />\r\n          {/* @ts-ignore */}\r\n          <SketchPicker color={color} onChange={handleChange} />\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\DownloadButton.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\Preview.tsx",["153"],"import Image from \"next/image\"\r\nimport { FC } from \"react\"\r\n\r\nexport const ExamPreview: FC<{ imgSrc: string }> = ({ imgSrc }) => {\r\n  return (\r\n    <div className=\"relative h-[350px]\">\r\n      <Image layout=\"fill\" objectFit=\"contain\" className=\"h-full w-full\" src={imgSrc} />\r\n    </div>\r\n  )\r\n}\r\n","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\ScreenSize.tsx",["154"],"import Image from \"next/image\"\r\nimport { CSSProperties, Dispatch, FC, SetStateAction } from \"react\"\r\nimport { ScreenSizeType } from \"../Page\"\r\n\r\nexport const ScreenSizeButton: FC<{\r\n  title: string\r\n  imgSrc: string\r\n  screenSizeID: ScreenSizeType\r\n  setScreenSize: Dispatch<SetStateAction<ScreenSizeType>>\r\n  style: CSSProperties\r\n}> = ({ title, imgSrc, screenSizeID, setScreenSize, style }) => {\r\n  return (\r\n    <button onClick={() => setScreenSize(screenSizeID)} className=\"flex flex-col gap-2\">\r\n      <div style={style} className=\"rounded-md border border-gray-300 transition-colors\">\r\n        <Image width={250} height={250} className=\"rounded-md\" src={imgSrc} />\r\n      </div>\r\n      <p>{title}</p>\r\n    </button>\r\n  )\r\n}\r\n","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Components\\ThemeButton.tsx",["155"],"import Image from \"next/image\"\r\nimport { Dispatch, FC, SetStateAction } from \"react\"\r\nimport { ThemeType } from \"../Page\"\r\n\r\nexport const ThemeButton: FC<{\r\n  title: string\r\n  imgSrc: string\r\n  themeID: ThemeType\r\n  setTheme: Dispatch<SetStateAction<ThemeType>>\r\n  style: object\r\n}> = ({ title, imgSrc, themeID, setTheme, style }) => {\r\n  return (\r\n    <button onClick={() => setTheme(themeID)} className=\"flex flex-col gap-2\">\r\n      <div style={style} className=\"rounded-md border border-gray-300 p-6 transition-colors\">\r\n        <Image width={270} height={480} className=\"rounded-md\" src={imgSrc} />\r\n      </div>\r\n      <p>{title}</p>\r\n    </button>\r\n  )\r\n}\r\n","D:\\wtf\\schedule-generator\\src\\components\\ExamSchedule\\Page.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\index.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Input.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\LearnSchedule\\Page.tsx",["156","157","158","159"],"D:\\wtf\\schedule-generator\\src\\components\\Loader\\Ellipsis.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Logo\\index.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Logo\\LongLogo.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Meta\\DescribeRoute.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Modal.tsx",["160"],"import { motion } from \"framer-motion\"\r\nimport classnames from \"classnames\"\r\nimport { detectOuside } from \"@utils/document\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\n\r\nconst Modal = ({\r\n  // @ts-ignore\r\n  children,\r\n  overlayClassName = \"\",\r\n  className = \"\",\r\n  TriggerRef = null,\r\n  CloseID = \"\",\r\n  TriggerDep = null,\r\n  CloseDep = null,\r\n  closeClickOutside = true,\r\n  ToggleDep = null,\r\n  reloadChildren = false,\r\n}) => {\r\n  const [modalState, setModalState] = useState({ comm: false, hide: true })\r\n  const [prevent, setPrevent] = useState(true)\r\n  const panel = useRef(null)\r\n\r\n  const trigger = () => {\r\n    setModalState((prevState) => ({ comm: !prevState.comm, hide: false }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    TriggerRef !== null && TriggerRef.current && TriggerRef.current.addEventListener(\"mousedown\", trigger)\r\n  }, [TriggerRef])\r\n\r\n  useEffect(() => {\r\n    if (ToggleDep !== null) {\r\n      ToggleDep && open()\r\n      !ToggleDep && close()\r\n    }\r\n  }, [ToggleDep])\r\n\r\n  const close = () => {\r\n    setModalState({ comm: false, hide: false })\r\n  }\r\n\r\n  const open = () => {\r\n    setModalState({ comm: true, hide: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (CloseID !== \"\") {\r\n      // @ts-ignore\r\n      document.getElementById(CloseID).addEventListener(\"mousedown\", close)\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (CloseDep !== null) {\r\n      // @ts-ignore\r\n      if (CloseDep.dep) {\r\n        close()\r\n        // @ts-ignore\r\n        CloseDep.revert()\r\n      }\r\n    }\r\n  }, [CloseDep])\r\n\r\n  const variants = {\r\n    show: { opacity: 1 },\r\n    hide: { opacity: 0 },\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (modalState.comm) {\r\n      setPrevent(false)\r\n    } else {\r\n      setPrevent(true)\r\n    }\r\n  }, [modalState])\r\n\r\n  useEffect(() => {\r\n    if (TriggerDep !== null) {\r\n      // @ts-ignore\r\n      if (TriggerDep.dep) {\r\n        open()\r\n        // @ts-ignore\r\n        TriggerDep.revert()\r\n      }\r\n    }\r\n  }, [TriggerDep])\r\n\r\n  closeClickOutside &&\r\n    detectOuside(panel, !prevent, () => {\r\n      close()\r\n    })\r\n\r\n  return (\r\n    <div className={classnames(overlayClassName, modalState.hide && \"hidden\")}>\r\n      <motion.div\r\n        ref={panel}\r\n        variants={variants}\r\n        animate={modalState.comm ? \"open\" : \"hide\"}\r\n        onAnimationComplete={() => {\r\n          !modalState.comm && setModalState({ comm: false, hide: true })\r\n        }}\r\n        className={className}\r\n      >\r\n        {reloadChildren ? !modalState.hide && children : children}\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","D:\\wtf\\schedule-generator\\src\\components\\Preview.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\Toast\\Context.tsx",[],"D:\\wtf\\schedule-generator\\src\\components\\_Preview.tsx",[],{"ruleId":"161","severity":1,"message":"162","line":103,"column":6,"nodeType":"163","endLine":103,"endColumn":32,"suggestions":"164"},{"ruleId":"165","severity":2,"message":"166","line":1,"column":1,"nodeType":"167","endLine":1,"endColumn":92},{"ruleId":"168","severity":1,"message":"169","line":22,"column":11,"nodeType":"170","endLine":22,"endColumn":88},{"ruleId":"171","severity":1,"message":"172","line":9,"column":7,"nodeType":"170","endLine":9,"endColumn":74},{"ruleId":"171","severity":1,"message":"172","line":19,"column":7,"nodeType":"170","endLine":19,"endColumn":74},{"ruleId":"171","severity":1,"message":"172","line":9,"column":7,"nodeType":"170","endLine":9,"endColumn":89},{"ruleId":"171","severity":1,"message":"172","line":20,"column":7,"nodeType":"170","endLine":20,"endColumn":81},{"ruleId":"171","severity":1,"message":"172","line":7,"column":13,"nodeType":"170","endLine":7,"endColumn":76},{"ruleId":"171","severity":1,"message":"172","line":15,"column":13,"nodeType":"170","endLine":15,"endColumn":76},{"ruleId":"171","severity":1,"message":"172","line":9,"column":7,"nodeType":"170","endLine":9,"endColumn":82},{"ruleId":"171","severity":1,"message":"172","line":19,"column":7,"nodeType":"170","endLine":19,"endColumn":82},{"ruleId":"161","severity":1,"message":"173","line":40,"column":6,"nodeType":"163","endLine":40,"endColumn":20,"suggestions":"174"},{"ruleId":"171","severity":1,"message":"172","line":7,"column":7,"nodeType":"170","endLine":7,"endColumn":89},{"ruleId":"171","severity":1,"message":"172","line":15,"column":9,"nodeType":"170","endLine":15,"endColumn":79},{"ruleId":"171","severity":1,"message":"172","line":15,"column":9,"nodeType":"170","endLine":15,"endColumn":79},{"ruleId":"161","severity":1,"message":"175","line":69,"column":6,"nodeType":"163","endLine":69,"endColumn":13,"suggestions":"176"},{"ruleId":"161","severity":1,"message":"177","line":81,"column":6,"nodeType":"163","endLine":81,"endColumn":16,"suggestions":"178"},{"ruleId":"161","severity":1,"message":"179","line":86,"column":6,"nodeType":"163","endLine":86,"endColumn":14,"suggestions":"180"},{"ruleId":"171","severity":1,"message":"172","line":166,"column":13,"nodeType":"170","endLine":166,"endColumn":97},{"ruleId":"161","severity":1,"message":"181","line":52,"column":6,"nodeType":"163","endLine":52,"endColumn":8,"suggestions":"182"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router.query.bg'. Either include it or remove the dependency array.","ArrayExpression",["183"],"@next/next/no-document-import-in-page","next/document should not be imported outside of pages/_document.js. See https://nextjs.org/docs/messages/no-document-import-in-page.","ImportDeclaration","@next/next/next-script-for-ga","Use the `next/script` component for loading third party scripts. See: https://nextjs.org/docs/messages/next-script-for-ga.","JSXOpeningElement","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'handleChange'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'getColorsFromID'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'background', 'customThemes', and 'theme'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'setBGcolor' and 'setPrimaryColor'. Either include them or remove the dependency array. If 'setBGcolor' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["187"],"React Hook useEffect has a missing dependency: 'CloseID'. Either include it or remove the dependency array.",["188"],{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [router.query.bg, router.query.colorScheme]",{"range":"201","text":"202"},"Update the dependencies array to be: [defaultColor, handleChange]",{"range":"203","text":"204"},"Update the dependencies array to be: [getColorsFromID, theme]",{"range":"205","text":"206"},"Update the dependencies array to be: [background, customThemes, theme, userData]",{"range":"207","text":"208"},"Update the dependencies array to be: [colors, setBGcolor, setPrimaryColor]",{"range":"209","text":"210"},"Update the dependencies array to be: [CloseID]",{"range":"211","text":"212"},[2884,2910],"[router.query.bg, router.query.colorScheme]",[918,932],"[defaultColor, handleChange]",[2933,2940],"[getColorsFromID, theme]",[3306,3316],"[background, customThemes, theme, userData]",[3442,3450],"[colors, setBGcolor, setPrimaryColor]",[1331,1333],"[CloseID]"]